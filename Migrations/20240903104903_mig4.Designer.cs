// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace staj_proje_ef.Migrations
{
    [DbContext(typeof(CompanySystemContext))]
    [Migration("20240903104903_mig4")]
    partial class mig4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("staj_proje_ef.classes.Customer", b =>
                {
                    b.Property<int>("customerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("customerId"));

                    b.Property<string>("customername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerstate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customersurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customertc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customertel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("staffId")
                        .HasColumnType("int");

                    b.Property<int>("unitId")
                        .HasColumnType("int");

                    b.HasKey("customerId");

                    b.HasIndex("staffId");

                    b.HasIndex("unitId");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("staj_proje_ef.classes.CustomerInfo", b =>
                {
                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KayıtBirimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KayıtDurumu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MüşteriNo")
                        .HasColumnType("int");

                    b.Property<string>("PersonelAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonelNo")
                        .HasColumnType("int");

                    b.Property<string>("PersonelSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vm_CustomerInfo", (string)null);
                });

            modelBuilder.Entity("staj_proje_ef.classes.Job", b =>
                {
                    b.Property<int>("jobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("jobId"));

                    b.Property<string>("jobname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("unitId")
                        .HasColumnType("int");

                    b.HasKey("jobId");

                    b.HasIndex("unitId");

                    b.ToTable("jobs");
                });

            modelBuilder.Entity("staj_proje_ef.classes.Role", b =>
                {
                    b.Property<int>("roleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("roleId"));

                    b.Property<string>("rolename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("roleId");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("staj_proje_ef.classes.Staff", b =>
                {
                    b.Property<int>("staffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("staffId"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("jobId")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("roleId")
                        .HasColumnType("int");

                    b.Property<string>("staffname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staffsurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stafftc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stafftel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("unitId")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("staffId");

                    b.HasIndex("jobId");

                    b.HasIndex("roleId");

                    b.HasIndex("unitId");

                    b.ToTable("staffs");
                });

            modelBuilder.Entity("staj_proje_ef.classes.StaffInfo", b =>
                {
                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Birim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonelNo")
                        .HasColumnType("int");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("İş")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vm_StaffInfo", (string)null);
                });

            modelBuilder.Entity("staj_proje_ef.classes.Unit", b =>
                {
                    b.Property<int>("unitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("unitId"));

                    b.Property<string>("unitname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("unitId");

                    b.ToTable("units");
                });

            modelBuilder.Entity("staj_proje_ef.classes.Customer", b =>
                {
                    b.HasOne("staj_proje_ef.classes.Staff", "staff")
                        .WithMany("customers")
                        .HasForeignKey("staffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("staj_proje_ef.classes.Unit", "unit")
                        .WithMany("customers")
                        .HasForeignKey("unitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("staff");

                    b.Navigation("unit");
                });

            modelBuilder.Entity("staj_proje_ef.classes.Job", b =>
                {
                    b.HasOne("staj_proje_ef.classes.Unit", "unit")
                        .WithMany("jobs")
                        .HasForeignKey("unitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("unit");
                });

            modelBuilder.Entity("staj_proje_ef.classes.Staff", b =>
                {
                    b.HasOne("staj_proje_ef.classes.Job", "job")
                        .WithMany("staffs")
                        .HasForeignKey("jobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("staj_proje_ef.classes.Role", "role")
                        .WithMany("staffs")
                        .HasForeignKey("roleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("staj_proje_ef.classes.Unit", "unit")
                        .WithMany("staffs")
                        .HasForeignKey("unitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("job");

                    b.Navigation("role");

                    b.Navigation("unit");
                });

            modelBuilder.Entity("staj_proje_ef.classes.Job", b =>
                {
                    b.Navigation("staffs");
                });

            modelBuilder.Entity("staj_proje_ef.classes.Role", b =>
                {
                    b.Navigation("staffs");
                });

            modelBuilder.Entity("staj_proje_ef.classes.Staff", b =>
                {
                    b.Navigation("customers");
                });

            modelBuilder.Entity("staj_proje_ef.classes.Unit", b =>
                {
                    b.Navigation("customers");

                    b.Navigation("jobs");

                    b.Navigation("staffs");
                });
#pragma warning restore 612, 618
        }
    }
}
